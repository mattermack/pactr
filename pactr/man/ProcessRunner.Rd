% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProcessRunner.R
\name{ProcessRunner}
\alias{ProcessRunner}
\title{Wrapper for all the Ruby Pact Scripts to call}
\description{
Wrapper for all the Ruby Pact Scripts to call

Wrapper for all the Ruby Pact Scripts to call
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ProcessRunner$new()}}
\item \href{#method-getExitCode}{\code{ProcessRunner$getExitCode()}}
\item \href{#method-runBlocking}{\code{ProcessRunner$runBlocking()}}
\item \href{#method-runNonBlocking}{\code{ProcessRunner$runNonBlocking()}}
\item \href{#method-run}{\code{ProcessRunner$run()}}
\item \href{#method-stop}{\code{ProcessRunner$stop()}}
\item \href{#method-clone}{\code{ProcessRunner$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$new(command, argments, process_x_args = list())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-getExitCode"></a>}}
\if{latex}{\out{\hypertarget{method-getExitCode}{}}}
\subsection{Method \code{getExitCode()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$getExitCode()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runBlocking"></a>}}
\if{latex}{\out{\hypertarget{method-runBlocking}{}}}
\subsection{Method \code{runBlocking()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$runBlocking(timeout = -1)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-runNonBlocking"></a>}}
\if{latex}{\out{\hypertarget{method-runNonBlocking}{}}}
\subsection{Method \code{runNonBlocking()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$runNonBlocking()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-run"></a>}}
\if{latex}{\out{\hypertarget{method-run}{}}}
\subsection{Method \code{run()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$run(blocking = false)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-stop"></a>}}
\if{latex}{\out{\hypertarget{method-stop}{}}}
\subsection{Method \code{stop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$stop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ProcessRunner$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
